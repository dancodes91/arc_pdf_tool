[project]
name = "arc-pdf-tool"
version = "0.1.0"
description = "PDF Price Book Parser and Configuration System"
authors = [
    {name = "ARC Development Team", email = "dev@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["pdf", "parsing", "price-book", "architecture", "hardware"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core PDF Processing
    "pdfplumber>=0.10.3",
    "camelot-py>=0.11.0",
    "pytesseract>=0.3.10",
    "Pillow>=10.1.0",
    "opencv-python>=4.8.1.78",
    "PyMuPDF>=1.23.18",
    "pdf2image>=1.16.3",

    # Data Processing
    "pandas>=2.1.4",
    "numpy>=1.24.4",
    "openpyxl>=3.1.2",
    "polars>=0.20.3",
    "pandera>=0.17.2",

    # Database
    "sqlalchemy>=2.0.23",
    "psycopg2-binary>=2.9.9",
    "alembic>=1.13.1",

    # FastAPI Stack
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "httpx>=0.25.2",
    "jinja2>=3.1.2",
    "python-multipart>=0.0.6",

    # Enhanced Diff Engine
    "rapidfuzz>=3.5.2",
    "deepdiff>=6.7.1",

    # Background Processing
    "celery>=5.3.4",
    "redis>=5.0.1",

    # Flask (gradual migration)
    "flask>=3.0.0",
    "flask-cors>=4.0.0",
    "werkzeug>=3.0.1",

    # Utilities
    "python-dateutil>=2.8.2",
    "fuzzywuzzy>=0.18.0",
    "python-Levenshtein>=0.23.0",
    "click>=8.1.7",
    "structlog>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "testcontainers>=3.7.1",
    "ruff>=0.1.7",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "app",
    "config.py",
    "database",
    "parsers",
    "diff_engine.py",
    "export_manager.py",
    "api_routes.py"
]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "testcontainers>=3.7.1",
    "ruff>=0.1.7",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
]

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
addopts = "-v --tb=short --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/venv/*",
    "*/tests/*",
    "setup.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]