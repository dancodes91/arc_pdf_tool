"""Initial schema with normalized price book tables

Revision ID: dd1b80615a02
Revises: 
Create Date: 2025-09-26 13:41:48.219148

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dd1b80615a02'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('manufacturers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('finishes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('bhma_code', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price_books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('edition', sa.String(length=100), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=True),
    sa.Column('upload_date', sa.DateTime(), nullable=True),
    sa.Column('file_path', sa.Text(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('parsing_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_families',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('family_id', sa.Integer(), nullable=True),
    sa.Column('price_book_id', sa.Integer(), nullable=False),
    sa.Column('sku', sa.String(length=100), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=True),
    sa.Column('retired_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['family_id'], ['product_families.id'], ),
    sa.ForeignKeyConstraint(['price_book_id'], ['price_books.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('change_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('old_price_book_id', sa.Integer(), nullable=True),
    sa.Column('new_price_book_id', sa.Integer(), nullable=False),
    sa.Column('change_type', sa.String(length=50), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('change_percentage', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['new_price_book_id'], ['price_books.id'], ),
    sa.ForeignKeyConstraint(['old_price_book_id'], ['price_books.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('option_type', sa.String(length=50), nullable=False),
    sa.Column('option_code', sa.String(length=50), nullable=True),
    sa.Column('option_name', sa.String(length=255), nullable=True),
    sa.Column('adder_type', sa.String(length=20), nullable=True),
    sa.Column('adder_value', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('requires_option', sa.String(length=50), nullable=True),
    sa.Column('excludes_option', sa.String(length=50), nullable=True),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('base_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('finish_adder', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('size_adder', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('option_adder', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('preparation_adder', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('total_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('effective_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product_prices')
    op.drop_table('product_options')
    op.drop_table('change_logs')
    op.drop_table('products')
    op.drop_table('product_families')
    op.drop_table('price_books')
    op.drop_table('finishes')
    op.drop_table('manufacturers')
    # ### end Alembic commands ###
