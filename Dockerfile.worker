# Dockerfile for PDF parsing worker with OCR capabilities
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies for PDF processing and OCR
RUN apt-get update && apt-get install -y \
    # PDF processing dependencies
    poppler-utils \
    ghostscript \
    # OCR dependencies
    tesseract-ocr \
    tesseract-ocr-eng \
    libtesseract-dev \
    # Image processing dependencies
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    # Build dependencies
    gcc \
    g++ \
    libpq-dev \
    libxml2-dev \
    libxslt-dev \
    # Utilities
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Configure Tesseract
ENV TESSDATA_PREFIX=/usr/share/tesseract-ocr/5/tessdata/

# Create non-root user
RUN useradd --create-home --shell /bin/bash arc
WORKDIR /app
RUN chown arc:arc /app

# Install UV for fast dependency management
COPY --from=ghcr.io/astral-sh/uv:latest /uv /bin/uv

# Copy dependency files
COPY --chown=arc:arc pyproject.toml uv.lock ./

# Install dependencies
RUN uv sync --frozen --no-cache

# Copy application code
COPY --chown=arc:arc . .

# Create directories for processing
RUN mkdir -p /app/data/uploads /app/data/processed /app/data/exports && \
    chown -R arc:arc /app/data

# Switch to non-root user
USER arc

# Health check for worker
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD python -c "import pytesseract, cv2, pdfplumber; print('Worker dependencies OK')" || exit 1

# Default command for worker service
CMD ["uv", "run", "python", "-m", "celery", "worker", "-A", "core.tasks", "--loglevel=info"]